// MIT License
// Copyright (c) 2016 Geometry Gym Pty Ltd

// Permission is hereby granted, free of charge, to any person obtaining a copy of this software 
// and associated documentation files (the "Software"), to deal in the Software without restriction, 
// including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, 
// and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, 
// subject to the following conditions:

// The above copyright notice and this permission notice shall be included in all copies or substantial 
// portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT 
// LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. 
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, 
// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE 
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

using System;
using System.Collections.Generic;

namespace GeometryGym.Ifc
{
	public enum ShapeRepresentationType
	{
		Curve2D, Annotation2D, GeometricSet, GeometricCurveSet, SurfaceModel, SolidModel, SweptSolid, CSG, Clipping, AdvancedSweptSolid, Brep, BoundingBox, SectionedSpine, MappedRepresentation,
		[VersionAdded(ReleaseVersion.IFC4)] Point, [VersionAdded(ReleaseVersion.IFC4)] PointCloud, [VersionAdded(ReleaseVersion.IFC4)] Curve, [VersionAdded(ReleaseVersion.IFC4)] Curve3D,
		[VersionAdded(ReleaseVersion.IFC4)] Surface, [VersionAdded(ReleaseVersion.IFC4)] Surface2D, [VersionAdded(ReleaseVersion.IFC4)] Surface3D, [VersionAdded(ReleaseVersion.IFC4)] FillArea,
		[VersionAdded(ReleaseVersion.IFC4)] Text, [VersionAdded(ReleaseVersion.IFC4)] Tessellation, [VersionAdded(ReleaseVersion.IFC4)] AdvancedBrep, [VersionAdded(ReleaseVersion.IFC4)] LightSource
	};

	[VersionAdded(ReleaseVersion.IFC4)]
	public enum IfcActionRequestTypeEnum { NOTDEFINED, USERDEFINED, EMAIL, FAX, PHONE, POST, VERBAL };
	[VersionAdded(ReleaseVersion.IFC2x2)]
	public enum IfcActionSourceTypeEnum { NOTDEFINED, USERDEFINED, DEAD_LOAD_G, COMPLETION_G1, LIVE_LOAD_Q, SNOW_S, WIND_W, PRESTRESSING_P, SETTLEMENT_U, TEMPERATURE_T, EARTHQUAKE_E, FIRE, IMPULSE, IMPACT, TRANSPORT, ERECTION, PROPPING, SYSTEM_IMPERFECTION, SHRINKAGE, CREEP, LACK_OF_FIT, BUOYANCY, ICE, CURRENT, WAVE, RAIN, BRAKES };
	[VersionAdded(ReleaseVersion.IFC2x2)]
	public enum IfcActionTypeEnum { NOTDEFINED, USERDEFINED, PERMANENT_G, VARIABLE_Q, EXTRAORDINARY_A };
	//[VersionAdded(ReleaseVersion.IFC2_0)]
	public enum IfcActuatorTypeEnum { NOTDEFINED, USERDEFINED, ELECTRICACTUATOR, HANDOPERATEDACTUATOR, HYDRAULICACTUATOR, PNEUMATICACTUATOR, THERMOSTATICACTUATOR };
	public enum IfcAddressTypeEnum { NOTDEFINED, USERDEFINED, OFFICE, SITE, HOME, DISTRIBUTIONPOINT};
	[Obsolete("DEPRECATED IFC4", false)]
	public enum IfcAheadOrBehind { AHEAD, BEHIND }; //OBSELETE IFC4
	public enum IfcAirTerminalBoxTypeEnum { NOTDEFINED, USERDEFINED, CONSTANTFLOW, VARIABLEFLOWPRESSUREDEPENDANT, VARIABLEFLOWPRESSUREINDEPENDANT };
	public enum IfcAirTerminalTypeEnum { NOTDEFINED, USERDEFINED, GRILLE, REGISTER, DIFFUSER, LOUVRE, EYEBALL, IRIS, LINEARGRILLE, LINEARDIFFUSER }; //IFC4 DELETED
	public enum IfcAirToAirHeatRecoveryTypeEnum { NOTDEFINED, USERDEFINED, FIXEDPLATECOUNTERFLOWEXCHANGER, FIXEDPLATECROSSFLOWEXCHANGER, FIXEDPLATEPARALLELFLOWEXCHANGER, ROTARYWHEEL, RUNAROUNDCOILLOOP, HEATPIPE, TWINTOWERENTHALPYRECOVERYLOOPS, THERMOSIPHONSEALEDTUBEHEATEXCHANGERS, THERMOSIPHONCOILTYPEHEATEXCHANGERS };
	public enum IfcAlarmTypeEnum { NOTDEFINED, USERDEFINED, BELL, BREAKGLASSBUTTON, LIGHT, MANUALPULLBOX, SIREN, WHISTLE, RAILWAYCROCODILE, RAILWAYDETONATOR };
	public enum IfcAlignmentCantSegmentTypeEnum { CONSTANTCANT, LINEARTRANSITION, BIQUADRATICPARABOLA, BLOSSCURVE, COSINECURVE, SINECURVE, VIENNESEBEND };
	public enum IfcAlignmentHorizontalSegmentTypeEnum { LINE, CIRCULARARC, CLOTHOID, CUBIC, BIQUADRATICPARABOLA, BLOSSCURVE, CUBICSPIRAL, COSINECURVE, SINECURVE, VIENNESEBEND };
	public enum IfcAlignmentTypeEnum { NOTDEFINED, USERDEFINED };
	public enum IfcAlignmentVerticalSegmentTypeEnum { CONSTANTGRADIENT, CIRCULARARC, PARABOLICARC, CLOTHOID };
	public enum IfcAnalysisModelTypeEnum { NOTDEFINED, USERDEFINED, IN_PLANE_LOADING_2D, OUT_PLANE_LOADING_2D, LOADING_3D };
	public enum IfcAnalysisTheoryTypeEnum { NOTDEFINED, USERDEFINED, FIRST_ORDER_THEORY, SECOND_ORDER_THEORY, THIRD_ORDER_THEORY, FULL_NONLINEAR_THEORY };
	public enum IfcAnnotationTypeEnum { NOTDEFINED, USERDEFINED, ASSUMEDPOINT, ASBUILTAREA, ASBUILTLINE, NON_PHYSICAL_SIGNAL, ASSUMEDLINE, WIDTHEVENT, ASSUMEDAREA, SUPERELEVATIONEVENT, ASBUILTPOINT };
	public enum IfcArithmeticOperatorEnum { NONE, ADD, DIVIDE, MULTIPLY, SUBTRACT }; //GG ADDED NONE
	public enum IfcAssemblyPlaceEnum { NOTDEFINED, SITE, FACTORY };
	public enum IfcAudioVisualApplianceTypeEnum { NOTDEFINED, USERDEFINED, AMPLIFIER, CAMERA, DISPLAY, MICROPHONE, PLAYER, PROJECTOR, RECEIVER, SPEAKER, SWITCHER, TELEPHONE, TUNER, RAILWAY_COMMUNICATION_TERMINAL };
	public enum IfcBeamTypeEnum { NOTDEFINED, USERDEFINED, BEAM, HOLLOWCORE, JOIST, LINTEL, SPANDREL, T_BEAM, GIRDER_SEGMENT, DIAPHRAGM, PIERCAP, HATSTONE, CORNICE, EDGEBEAM };
	public enum IfcBearingTypeDisplacementEnum { NOTDEFINED, FIXED_MOVEMENT, GUIDED_LONGITUDINAL, GUIDED_TRANSVERSAL, FREE_MOVEMENT };
	public enum IfcBearingTypeEnum { NOTDEFINED, USERDEFINED, CYLINDRICAL, SPHERICAL, ELASTOMERIC, POT, GUIDE, ROCKER, ROLLER, DISK };
	public enum IfcBenchmarkEnum { GREATERTHAN, GREATERTHANOREQUALTO, LESSTHAN, LESSTHANOREQUALTO, EQUALTO, NOTEQUALTO, INCLUDES, NOTINCLUDES, INCLUDEDIN, NOTINCLUDEDIN };
	public enum IfcBoilerTypeEnum { NOTDEFINED, USERDEFINED, WATER, STEAM };
	public enum IfcBooleanOperator { UNION, INTERSECTION, DIFFERENCE };
	public enum IfcBridgePartTypeEnum { NOTDEFINED, USERDEFINED, ABUTMENT, DECK, DECK_SEGMENT, FOUNDATION, PIER, PIER_SEGMENT, PYLON, SUBSTRUCTURE, SUPERSTRUCTURE, SURFACESTRUCTURE };
	public enum IfcBridgeTypeEnum { NOTDEFINED, USERDEFINED, ARCHED, CABLE_STAYED, CANTILEVER, CULVERT, FRAMEWORK, GIRDER, SUSPENSION, TRUSS };
	public enum IfcBSplineCurveForm { UNSPECIFIED, POLYLINE_FORM, CIRCULAR_ARC, ELLIPTIC_ARC, PARABOLIC_ARC, HYPERBOLIC_ARC };
	public enum IfcBSplineSurfaceForm { UNSPECIFIED, PLANE_SURF, CYLINDRICAL_SURF, CONICAL_SURF, SPHERICAL_SURF, TOROIDAL_SURF, SURF_OF_REVOLUTION, RULED_SURF, GENERALISED_CONE, QUADRIC_SURF, SURF_OF_LINEAR_EXTRUSION };
	public enum IfcBuildingElementPartTypeEnum { NOTDEFINED, USERDEFINED, INSULATION, PRECASTPANEL, APRON, ARMOURUNIT, SAFETYCAGE };
	public enum IfcBuildingElementProxyTypeEnum { NOTDEFINED, USERDEFINED, COMPLEX, ELEMENT, PARTIAL, PROVISIONFORVOID, PROVISIONFORSPACE }; // 1st 3 not used
	public enum IfcBuiltSystemTypeEnum { NOTDEFINED, USERDEFINED, REINFORCING, MOORING, OUTERSHELL, TRACKCIRCUIT, EROSIONPREVENTION, FOUNDATION, LOADBEARING, SHADING, FENESTRATION, MOORINGSYSTEM, TRANSPORT, PRESTRESSING };
	public enum IfcBurnerTypeEnum { NOTDEFINED, USERDEFINED };
	public enum IfcCableCarrierFittingTypeEnum { NOTDEFINED, USERDEFINED, BEND, CROSS, REDUCER, TEE };
	public enum IfcCableCarrierSegmentTypeEnum { NOTDEFINED, USERDEFINED, CABLELADDERSEGMENT, CABLETRAYSEGMENT, CABLETRUNKINGSEGMENT, CONDUITSEGMENT, CABLEBRACKET, CATENARYWIRE, DROPPER };
	public enum IfcCableFittingTypeEnum { NOTDEFINED, USERDEFINED, CONNECTOR, ENTRY, EXIT, JUNCTION, TRANSITION, FANOUT };
	public enum IfcCableSegmentTypeEnum { NOTDEFINED, USERDEFINED, CABLESEGMENT, CONDUCTORSEGMENT, BUSBARSEGMENT, CORESEGMENT, CONTACTWIRESEGMENT, FIBERSEGMENT, FIBERTUBE, OPTICALCABLESEGMENT, STITCHWIRE, WIREPAIRSEGMENT };
	public enum IfcCaissonFoundationTypeEnum { NOTDEFINED, USERDEFINED, WELL, CAISSON };
	public enum IfcCardinalPointReference { DEFAULT = 0, BOTLEFT = 1, BOTMID = 2, BOTRIGHT = 3, MIDLEFT = 4, MID = 5, MIDRIGHT = 6, TOPLEFT = 7, TOPMID = 8, TOPRIGHT = 9, CENTROID = 10, BOTCENT = 11, LEFTCENT = 12, RIGHTCENT = 13, TOPCENT = 14, SHEARCENT = 15, BOTSHEAR = 16, LEFTSHEAR = 17, RIGHTSHEAR = 18, TOPSHEAR = 19 };
	public enum IfcChangeActionEnum { NOCHANGE, MODIFIED, ADDED, DELETED, NOTDEFINED, MODIFIEDADDED, MODIFIEDDELETED }; //IFC4 MODIFIED DELETED
	public enum IfcChillerTypeEnum { NOTDEFINED, USERDEFINED, AIRCOOLED, WATERCOOLED, HEATRECOVERY };
	public enum IfcChimneyTypeEnum { NOTDEFINED, USERDEFINED };
	public enum IfcCoilTypeEnum { NOTDEFINED, USERDEFINED, DXCOOLINGCOIL, WATERCOOLINGCOIL, STEAMHEATINGCOIL, WATERHEATINGCOIL, ELECTRICHEATINGCOIL, GASHEATINGCOIL, HYDRONICCOIL };
	public enum IfcColumnTypeEnum { NOTDEFINED, USERDEFINED, COLUMN, PILASTER, PIERSTEM, PIERSTEM_SEGMENT, STANDCOLUMN };
	public enum IfcCommunicationsApplianceTypeEnum { NOTDEFINED, USERDEFINED, ANTENNA, COMPUTER, FAX, GATEWAY, MODEM, NETWORKAPPLIANCE, NETWORKBRIDGE, NETWORKHUB, PRINTER, REPEATER, ROUTER, SCANNER, AUTOMATON, INTELLIGENT_PERIPHERAL, IP_NETWORK_EQUIPMENT, OPTICAL_NETWORK_UNIT, TELECOMMAND, TELEPHONYEXCHANGE, TRANSITIONCOMPONENT, TRANSPONDER, TRANSPORTEQUIPMENT };
	public enum IfcComplexPropertyTemplateTypeEnum { NOTDEFINED, P_COMPLEX, Q_COMPLEX };
	public enum IfcCompressorTypeEnum { NOTDEFINED, USERDEFINED, DYNAMIC, RECIPROCATING, ROTARY, SCROLL, TROCHOIDAL, SINGLESTAGE, BOOSTER, OPENTYPE, HERMETIC, SEMIHERMETIC, WELDEDSHELLHERMETIC, ROLLINGPISTON, ROTARYVANE, SINGLESCREW, TWINSCREW };
	public enum IfcCondenserTypeEnum { NOTDEFINED, USERDEFINED, WATERCOOLEDSHELLTUBE, WATERCOOLEDSHELLCOIL, WATERCOOLEDTUBEINTUBE, WATERCOOLEDBRAZEDPLATE, AIRCOOLED, EVAPORATIVECOOLED, WATERCOOLED };
	public enum IfcConnectionTypeEnum { NOTDEFINED, ATPATH, ATSTART, ATEND };
	public enum IfcConstraintEnum { NOTDEFINED, USERDEFINED, HARD, SOFT, ADVISORY };
	public enum IfcControllerTypeEnum { NOTDEFINED, USERDEFINED, FLOATING, PROPORTIONAL, PROPORTIONALINTEGRAL, PROPORTIONALINTEGRALDERIVATIVE, TIMEDTWOPOSITION, TWOPOSITION, PROGRAMMABLE, MULTIPOSITION };
	public enum IfcConstructionEquipmentResourceTypeEnum { NOTDEFINED, USERDEFINED, DEMOLISHING, EARTHMOVING, ERECTING, HEATING, LIGHTING, PAVING, PUMPING, TRANSPORTING };
	public enum IfcConstructionMaterialResourceTypeEnum { NOTDEFINED, USERDEFINED, AGGREGATES, CONCRETE, DRYWALL, FUEL, GYPSUM, MASONRY, METAL, PLASTIC, WOOD };
	public enum IfcConstructionProductResourceTypeEnum { NOTDEFINED, USERDEFINED, ASSEMBLY, FORMWORK };
	public enum IfcConveyorSegmentTypeEnum { NOTDEFINED, USERDEFINED, CHUTECONVEYOR, BELTCONVEYOR, SCREWCONVEYOR, BUCKETCONVEYOR };
	public enum IfcCooledBeamTypeEnum { NOTDEFINED, USERDEFINED, ACTIVE, PASSIVE };
	public enum IfcCoolingTowerTypeEnum { NOTDEFINED, USERDEFINED, NATURALDRAFT, MECHANICALINDUCEDDRAFT, MECHANICALFORCEDDRAFT };
	public enum IfcCostItemTypeEnum { NOTDEFINED, USERDEFINED, };
	public enum IfcCostScheduleTypeEnum { NOTDEFINED, USERDEFINED, BUDGET, COSTPLAN, ESTIMATE, TENDER, PRICEDBILLOFQUANTITIES, UNPRICEDBILLOFQUANTITIES, SCHEDULEOFRATES };
	public enum IfcCourseTypeEnum { NOTDEFINED, USERDEFINED, ARMOUR, FILTER, BALLASTBED, CORE, PAVEMENT, PROTECTION };
	public enum IfcCoveringTypeEnum { NOTDEFINED, USERDEFINED, CEILING, CLADDING, FLOORING, MOLDING, ROOFING, SKIRTINGBOARD, INSULATION, MEMBRANE, SLEEVING, WRAPPING, COPING }; //IFC4 DELETED
	public enum IfcCrewResourceTypeEnum { NOTDEFINED, USERDEFINED, OFFICE, SITE };
	public enum IfcCurrencyEnum { NOTDEFINED, AED, AES, ATS, AUD, BBD, BEG, BGL, BHD, BMD, BND, BRL, BSD, BWP, BZD, CAD, CBD, CHF, CLP, CNY, CYS, CZK, DDP, DEM, DKK, EGL, EST, EUR, FAK, FIM, FJD, FKP, FRF, GBP, GIP, GMD, GRX, HKD, HUF, ICK, IDR, ILS, INR, IRP, ITL, JMD, JOD, JPY, KES, KRW, KWD, KYD, LKR, LUF, MTL, MUR, MXN, MYR, NLG, NZD, OMR, PGK, PHP, PKR, PLN, PTN, QAR, RUR, SAR, SCR, SEK, SGD, SKP, THB, TRL, TTD, TWD, USD, VEB, VND, XEU, ZAR, ZWD, NOK };
	public enum IfcCurtainWallTypeEnum { NOTDEFINED, USERDEFINED, };
	public enum IfcCurveInterpolationEnum { NOTDEFINED, LINEAR, LOG_LINEAR, LOG_LOG }
	public enum IfcDamperTypeEnum { NOTDEFINED, USERDEFINED, CONTROLDAMPER, FIREDAMPER, SMOKEDAMPER, FIRESMOKEDAMPER, BACKDRAFTDAMPER, RELIEFDAMPER, BLASTDAMPER, GRAVITYDAMPER, GRAVITYRELIEFDAMPER, BALANCINGDAMPER, FUMEHOODEXHAUST };
	public enum IfcDataOriginEnum { NOTDEFINED, USERDEFINED, MEASURED, PREDICTED, SIMULATED };
	public enum IfcDerivedUnitEnum
	{
		USERDEFINED, ANGULARVELOCITYUNIT, COMPOUNDPLANEANGLEUNIT, DYNAMICVISCOSITYUNIT, HEATFLUXDENSITYUNIT,
		INTEGERCOUNTRATEUNIT, ISOTHERMALMOISTURECAPACITYUNIT, KINEMATICVISCOSITYUNIT, LINEARVELOCITYUNIT, MASSDENSITYUNIT,
		MASSFLOWRATEUNIT, MOISTUREDIFFUSIVITYUNIT, MOLECULARWEIGHTUNIT, SPECIFICHEATCAPACITYUNIT, THERMALADMITTANCEUNIT,
		THERMALCONDUCTANCEUNIT, THERMALRESISTANCEUNIT, THERMALTRANSMITTANCEUNIT, VAPORPERMEABILITYUNIT, VOLUMETRICFLOWRATEUNIT,
		ROTATIONALFREQUENCYUNIT, TORQUEUNIT, MOMENTOFINERTIAUNIT, LINEARMOMENTUNIT, LINEARFORCEUNIT, PLANARFORCEUNIT,
		MODULUSOFELASTICITYUNIT, SHEARMODULUSUNIT, LINEARSTIFFNESSUNIT, ROTATIONALSTIFFNESSUNIT, MODULUSOFSUBGRADEREACTIONUNIT,
		ACCELERATIONUNIT, CURVATUREUNIT, HEATINGVALUEUNIT, IONCONCENTRATIONUNIT, LUMINOUSINTENSITYDISTRIBUTIONUNIT, MASSPERLENGTHUNIT,
		MODULUSOFLINEARSUBGRADEREACTIONUNIT, MODULUSOFROTATIONALSUBGRADEREACTIONUNIT, PHUNIT, ROTATIONALMASSUNIT, SECTIONAREAINTEGRALUNIT,
		SECTIONMODULUSUNIT, SOUNDPOWERUNIT, SOUNDPRESSUREUNIT, TEMPERATUREGRADIENTUNIT, THERMALEXPANSIONCOEFFICIENTUNIT, WARPINGCONSTANTUNIT,
		WARPINGMOMENTUNIT, AREADENSITYUNIT, SOUNDPRESSURELEVELUNIT, TEMPERATURERATEOFCHANGEUNIT, SOUNDPOWERLEVELUNIT
	};
	public enum IfcDimensionExtentUsage { ORIGIN, TARGET };
	public enum IfcDirectionSenseEnum { POSITIVE, NEGATIVE };
	public enum IfcDiscreteAccessoryTypeEnum { NOTDEFINED, USERDEFINED, ANCHORPLATE, BRACKET, SHOE, EXPANSION_JOINT_DEVICE, BIRDPROTECTION, CABLEARRANGER, INSULATOR, LOCK, TENSIONINGEQUIPMENT, RAILPAD, SLIDINGCHAIR, RAIL_LUBRICATION, PANEL_STRENGTHENING, RAILBRACE, ELASTIC_CUSHION, SOUNDABSORPTION,POINTMACHINEMOUNTINGDEVICE, POINT_MACHINE_LOCKING_DEVICE, RAIL_MECHANICAL_EQUIPMENT };
	public enum IfcDistributionBoardTypeEnum { NOTDEFINED, USERDEFINED, SWITCHBOARD, CONSUMERUNIT, MOTORCONTROLCENTRE, DISTRIBUTIONFRAME, DISTRIBUTIONBOARD };
	public enum IfcDistributionChamberElementTypeEnum { NOTDEFINED, USERDEFINED, FORMEDDUCT, INSPECTIONCHAMBER, INSPECTIONPIT, MANHOLE, METERCHAMBER, SUMP, TRENCH, VALVECHAMBER };
	public enum IfcDistributionPortTypeEnum { NOTDEFINED, USERDEFINED, CABLE, CABLECARRIER, DUCT, PIPE, WIRELESS }
	public enum IfcDistributionSystemEnum { NOTDEFINED, USERDEFINED, AIRCONDITIONING, AUDIOVISUAL, CHEMICAL, CHILLEDWATER, COMMUNICATION, COMPRESSEDAIR, CONDENSERWATER,
		CONTROL, CONVEYING, DATA, DISPOSAL, DOMESTICCOLDWATER, DOMESTICHOTWATER, DRAINAGE, EARTHING, ELECTRICAL, ELECTROACOUSTIC, EXHAUST,
		FIREPROTECTION, FUEL, GAS, HAZARDOUS, HEATING, LIGHTING, LIGHTNINGPROTECTION, MUNICIPALSOLIDWASTE, OIL, OPERATIONAL, POWERGENERATION,
		RAINWATER, REFRIGERATION, SECURITY, SEWAGE, SIGNAL, STORMWATER, TELEPHONE, TV, VACUUM, VENT, VENTILATION, WASTEWATER, WATERSUPPLY, CATENARY_SYSTEM, OVERHEAD_CONTACTLINE_SYSTEM, RETURN_CIRCUIT
	};
	public enum IfcDistributionSystemEnumPipe { NOTDEFINED, USERDEFINED, CHEMICAL, CHILLEDWATER, COMPRESSEDAIR, CONDENSERWATER, CONVEYING, DISPOSAL, DOMESTICCOLDWATER,
		DOMESTICHOTWATER, DRAINAGE, FIREPROTECTION, FUEL, GAS, HAZARDOUS, HEATING, MUNICIPALSOLIDWASTE, OIL, OPERATIONAL, RAINWATER,
		REFRIGERATION, SEWAGE, STORMWATER, VACUUM, VENT, WASTEWATER, WATERSUPPLY };
	public enum IfcDistributionSystemEnumDuct { NOTDEFINED, USERDEFINED, AIRCONDITIONING, EXHAUST, VENTILATION };
	public enum IfcDistributionSystemEnumCable { NOTDEFINED, USERDEFINED, AUDIOVISUAL, COMMUNICATION, CONTROL, DATA, EARTHING, ELECTRICAL, ELECTROACOUSTIC, LIGHTING,
		LIGHTNINGPROTECTION, POWERGENERATION, SECURITY, SIGNAL, TELEPHONE, TV };
	public enum IfcDistributionSystemEnumCableCarrier { NOTDEFINED, USERDEFINED, AUDIOVISUAL, COMMUNICATION, CONTROL, DATA, EARTHING, ELECTRICAL, ELECTROACOUSTIC,
		LIGHTING, LIGHTNINGPROTECTION, POWERGENERATION, SECURITY, SIGNAL, TELEPHONE, TV };
	public enum IfcDocumentConfidentialityEnum { NOTDEFINED, USERDEFINED, PUBLIC, RESTRICTED, CONFIDENTIAL, PERSONAL };
	public enum IfcDocumentStatusEnum { NOTDEFINED, DRAFT, FINALDRAFT, FINAL, REVISION };
	public enum IfcDoorPanelOperationEnum { NOTDEFINED, USERDEFINED, SWINGING, DOUBLE_ACTING, SLIDING, FOLDING, REVOLVING, ROLLINGUP, FIXEDPANEL };
	public enum IfcDoorPanelPositionEnum { NOTDEFINED, LEFT, MIDDLE, RIGHT };
	public enum IfcDoorStyleConstructionEnum { NOTDEFINED, USERDEFINED, ALUMINIUM, HIGH_GRADE_STEEL, STEEL, WOOD, ALUMINIUM_WOOD, ALUMINIUM_PLASTIC, PLASTIC };
	public enum IfcDoorStyleOperationEnum { NOTDEFINED, USERDEFINED, SINGLE_SWING_LEFT, SINGLE_SWING_RIGHT, DOUBLE_DOOR_SINGLE_SWING, DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT, DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT, DOUBLE_SWING_LEFT, DOUBLE_SWING_RIGHT, DOUBLE_DOOR_DOUBLE_SWING, SLIDING_TO_LEFT, SLIDING_TO_RIGHT, DOUBLE_DOOR_SLIDING, FOLDING_TO_LEFT, FOLDING_TO_RIGHT, DOUBLE_DOOR_FOLDING, REVOLVING, ROLLINGUP };
	public enum IfcDoorTypeOperationEnum { NOTDEFINED, USERDEFINED, SINGLE_SWING_LEFT, SINGLE_SWING_RIGHT, DOUBLE_PANEL_SINGLE_SWING, DOUBLE_PANEL_SINGLE_SWING_OPPOSITE_LEFT, DOUBLE_PANEL_SINGLE_SWING_OPPOSITE_RIGHT, DOUBLE_SWING_LEFT, DOUBLE_SWING_RIGHT, DOUBLE_PANEL_DOUBLE_SWING, SLIDING_TO_LEFT, SLIDING_TO_RIGHT, DOUBLE_PANEL_SLIDING, FOLDING_TO_LEFT, FOLDING_TO_RIGHT, DOUBLE_PANEL_FOLDING, REVOLVING_HORIZONTAL, ROLLINGUP, SWING_FIXED_LEFT, SWING_FIXED_RIGHT, DOUBLE_PANEL_LIFTING_VERTICAL, LIFTING_HORIZONTAL, LIFTING_VERTICAL_LEFT, LIFTING_VERTICAL_RIGHT, REVOLVING_VERTICAL };
	public enum IfcDoorTypeEnum { NOTDEFINED, USERDEFINED, DOOR, GATE, TRAPDOOR, BOOM_BARRIER, TURNSTILE };
	public enum IfcDuctFittingTypeEnum { NOTDEFINED, USERDEFINED, BEND, CONNECTOR, ENTRY, EXIT, JUNCTION, OBSTRUCTION, TRANSITION };
	public enum IfcDuctSegmentTypeEnum { NOTDEFINED, USERDEFINED, RIGIDSEGMENT, FLEXIBLESEGMENT };
	public enum IfcDuctSilencerTypeEnum { NOTDEFINED, USERDEFINED, FLATOVAL, RECTANGULAR, ROUND };
	public enum IfcEarthworksCutTypeEnum { NOTDEFINED, USERDEFINED, TRENCH, DREDGING, EXCAVATION, OVEREXCAVATION, TOPSOILREMOVAL, STEPEXCAVATION, PAVEMENTMILLING, CUT, BASE_EXCAVATION };
	public enum IfcEarthworksFillTypeEnum { NOTDEFINED, USERDEFINED, BACKFILL, COUNTERWEIGHT, SUBGRADE, EMBANKMENT, TRANSITIONSECTION, SUBGRADEBED, SLOPEFILL };
	public enum IfcElectricApplianceTypeEnum { NOTDEFINED, USERDEFINED, COMPUTER, DIRECTWATERHEATER, DISHWASHER, ELECTRICCOOKER, ELECTRICHEATER, FACSIMILE, FREESTANDINGFAN, FREEZER, FRIDGE_FREEZER, HANDDRYER, INDIRECTWATERHEATER, MICROWAVE, PHOTOCOPIER, PRINTER, REFRIGERATOR, RADIANTHEATER, SCANNER, TELEPHONE, TUMBLEDRYER, TV, VENDINGMACHINE, WASHINGMACHINE, WATERHEATER, WATERCOOLER, FREESTANDINGELECTRICHEATER, FREESTANDINGWATERHEATER, FREESTANDINGWATERCOOLER, KITCHENMACHINE };
	public enum IfcElectricCurrentEnum { NOTDEFINED, ALTERNATING, DIRECT };
	public enum IfcElectricDistributionBoardTypeEnum { NOTDEFINED, USERDEFINED, CONSUMERUNIT, DISTRIBUTIONBOARD, MOTORCONTROLCENTRE, SWITCHBOARD };
	public enum IfcElectricDistributionPointFunctionEnum { NOTDEFINED, USERDEFINED, ALARMPANEL, CONSUMERUNIT, CONTROLPANEL, DISTRIBUTIONBOARD, GASDETECTORPANEL, INDICATORPANEL, MIMICPANEL, MOTORCONTROLCENTRE, SWITCHBOARD };
	public enum IfcElectricFlowStorageDeviceTypeEnum { NOTDEFINED, USERDEFINED, BATTERY, CAPACITORBANK, HARMONICFILTER, INDUCTORBANK, UPS, CAPACITOR, COMPENSATOR, INDUCTOR, RECHARGER };
	public enum IfcElectricFlowTreatmentDeviceTypeEnum { NOTDEFINED, USERDEFINED, ELECTRONICFILTER };
	public enum IfcElectricGeneratorTypeEnum { NOTDEFINED, USERDEFINED, CHP, ENGINEGENERATOR, STANDALONE };
	public enum IfcElectricHeaterTypeEnum { NOTDEFINED, USERDEFINED, ELECTRICPOINTHEATER, ELECTRICCABLEHEATER };
	public enum IfcElectricMotorTypeEnum { NOTDEFINED, USERDEFINED, DC, INDUCTION, POLYPHASE, RELUCTANCESYNCHRONOUS, SYNCHRONOUS };
	public enum IfcElectricTimeControlTypeEnum { NOTDEFINED, USERDEFINED, TIMECLOCK, TIMEDELAY, RELAY };
	public enum IfcElementAssemblyTypeEnum { NOTDEFINED, USERDEFINED, ACCESSORY_ASSEMBLY, ARCH, BEAM_GRID, BRACED_FRAME, GIRDER, REINFORCEMENT_UNIT, RIGID_FRAME, SLAB_FIELD, TRUSS, ABUTMENT, PIER, PYLON, CROSS_BRACING, DECK, MAST, SIGNALASSEMBLY, GRID, SHELTER, SUPPORTINGASSEMBLY, SUSPENSIONASSEMBLY, TRACTION_SWITCHING_ASSEMBLY, TRACKPANEL, TURNOUTPANEL, DILATATIONPANEL, RAIL_MECHANICAL_EQUIPMENT_ASSEMBLY, ENTRANCEWORKS, SUMPBUSTER, TRAFFIC_CALMING_DEVICE };
	public enum IfcElementCompositionEnum { NOTDEFINED, COMPLEX, ELEMENT, PARTIAL };
	public enum IfcEnergySequenceEnum { NOTDEFINED, USERDEFINED, PRIMARY, SECONDARY, TERTIARY, AUXILIARY };
	public enum IfcEngineTypeEnum { NOTDEFINED, USERDEFINED, EXTERNALCOMBUSTION, INTERNALCOMBUSTION };
	public enum IfcEnvironmentalImpactCategoryEnum { NOTDEFINED, USERDEFINED, COMBINEDVALUE, DISPOSAL, EXTRACTION, INSTALLATION, MANUFACTURE, TRANSPORTATION };
	public enum IfcEvaporativeCoolerTypeEnum { NOTDEFINED, USERDEFINED, DIRECTEVAPORATIVERANDOMMEDIAAIRCOOLER, DIRECTEVAPORATIVERIGIDMEDIAAIRCOOLER, DIRECTEVAPORATIVESLINGERSPACKAGEDAIRCOOLER, DIRECTEVAPORATIVEPACKAGEDROTARYAIRCOOLER, DIRECTEVAPORATIVEAIRWASHER, INDIRECTEVAPORATIVEPACKAGEAIRCOOLER, INDIRECTEVAPORATIVEWETCOIL, INDIRECTEVAPORATIVECOOLINGTOWERORCOILCOOLER, INDIRECTDIRECTCOMBINATION };
	public enum IfcEvaporatorTypeEnum { NOTDEFINED, USERDEFINED, DIRECTEXPANSIONSHELLANDTUBE, DIRECTEXPANSIONTUBEINTUBE, DIRECTEXPANSIONBRAZEDPLATE, FLOODEDSHELLANDTUBE, SHELLANDCOIL, DIRECTEXPANSION };
	public enum IfcEventTypeEnum { NOTDEFINED, USERDEFINED, STARTEVENT, ENDEVENT, INTERMEDIATEEVENT } //IFC4
	public enum IfcEventTriggerTypeEnum { NOTDEFINED, USERDEFINED, EVENTRULE, EVENTMESSAGE, EVENTTIME, EVENTCOMPLEX } //IFC4
	public enum IfcExternalSpatialElementTypeEnum { NOTDEFINED, USERDEFINED, EXTERNAL, EXTERNAL_EARTH, EXTERNAL_WATER, EXTERNAL_FIRE } //IFC4
	public enum IfcFacilityPartCommonTypeEnum { NOTDEFINED, USERDEFINED, SEGMENT, ABOVEGROUND, JUNCTION, LEVELCROSSING, BELOWGROUND, SUBSTRUCTURE, TERMINAL, SUPERSTRUCTURE };
	public enum IfcFacilityUsageEnum { NOTDEFINED, USERDEFINED, LATERAL, REGION, VERTICAL, LONGITUDINAL };
	public enum IfcFanTypeEnum { NOTDEFINED, USERDEFINED, CENTRIFUGALFORWARDCURVED, CENTRIFUGALRADIAL, CENTRIFUGALBACKWARDINCLINEDCURVED, CENTRIFUGALAIRFOIL, TUBEAXIAL, VANEAXIAL, PROPELLORAXIAL };
	public enum IfcFastenerTypeEnum { NOTDEFINED, USERDEFINED, GLUE, MORTAR, WELD } //IFC4
	public enum IfcFilterTypeEnum { NOTDEFINED, USERDEFINED, AIRPARTICLEFILTER, ODORFILTER, OILFILTER, STRAINER, WATERFILTER, COMPRESSEDAIRFILTER };
	public enum IfcFireSuppressionTerminalTypeEnum { NOTDEFINED, USERDEFINED, BREECHINGINLET, FIREHYDRANT, HOSEREEL, SPRINKLER, SPRINKLERDEFLECTOR, FIREMONITOR };
	public enum IfcFlowDirectionEnum { NOTDEFINED, SOURCE, SINK, SOURCEANDSINK };
	public enum IfcFlowInstrumentTypeEnum { NOTDEFINED, USERDEFINED, PRESSUREGAUGE, THERMOMETER, AMMETER, FREQUENCYMETER, POWERFACTORMETER, PHASEANGLEMETER, VOLTMETER_PEAK, VOLTMETER_RMS, COMBINED, VOLTMETER };
	public enum IfcFlowMeterTypeEnum { NOTDEFINED, USERDEFINED, ENERGYMETER, GASMETER, OILMETER, WATERMETER, ELECTRICMETER, FLOWMETER }; // IFC4 DELETED
	public enum IfcFootingTypeEnum { NOTDEFINED, USERDEFINED, CAISSON_FOUNDATION, FOOTING_BEAM, PAD_FOOTING, PILE_CAP, STRIP_FOOTING };
	public enum IfcFurnitureTypeEnum { NOTDEFINED, USERDEFINED, CHAIR, TABLE, DESK, BED, FILECABINET, SHELF, SOFA, TECHNICALCABINET };
	public enum IfcGasTerminalTypeEnum { NOTDEFINED, USERDEFINED, GASAPPLIANCE, GASBOOSTER, GASBURNER };
	public enum IfcGeographicElementTypeEnum { NOTDEFINED, USERDEFINED, TERRAIN, SOIL_BORING_POINT };
	public enum IfcGeometricProjectionEnum { NOTDEFINED, USERDEFINED, GRAPH_VIEW, SKETCH_VIEW, MODEL_VIEW, PLAN_VIEW, REFLECTED_PLAN_VIEW, SECTION_VIEW, ELEVATION_VIEW };
	public enum IfcGlobalOrLocalEnum { GLOBAL_COORDS, LOCAL_COORDS };
	public enum IfcGridTypeEnum { NOTDEFINED, USERDEFINED, RECTANGULAR, RADIAL, TRIANGULAR, IRREGULAR };
	public enum IfcHeatExchangerTypeEnum { NOTDEFINED, USERDEFINED, PLATE, SHELLANDTUBE, TURNOUTHEATING };
	public enum IfcHumidifierTypeEnum { NOTDEFINED, USERDEFINED, STEAMINJECTION, ADIABATICAIRWASHER, ADIABATICPAN, ADIABATICWETTEDELEMENT, ADIABATICATOMIZING, ADIABATICULTRASONIC, ADIABATICRIGIDMEDIA, ADIABATICCOMPRESSEDAIRNOZZLE, ASSISTEDELECTRIC, ASSISTEDNATURALGAS, ASSISTEDPROPANE, ASSISTEDBUTANE, ASSISTEDSTEAM };
	public enum IfcImpactProtectionDeviceTypeEnum { NOTDEFINED, USERDEFINED, CRASHCUSHION, DAMPINGSYSTEM, FENDER, BUMPER };
	public enum IfcInternalOrExternalEnum { NOTDEFINED, INTERNAL, EXTERNAL, EXTERNAL_EARTH, EXTERNAL_WATER, EXTERNAL_FIRE };
	public enum IfcInventoryTypeEnum { NOTDEFINED, USERDEFINED, ASSETINVENTORY, SPACEINVENTORY, FURNITUREINVENTORY };
	public enum IfcInterceptorTypeEnum { NOTDEFINED, USERDEFINED, CYCLONIC, GREASE, OIL, PETROL };
	public enum IfcJunctionBoxTypeEnum { NOTDEFINED, USERDEFINED, DATA, POWER };
	public enum IfcKnotType { UNSPECIFIED, UNIFORM_KNOTS, QUASI_UNIFORM_KNOTS, PIECEWISE_BEZIER_KNOTS };
	public enum IfcLaborResourceTypeEnum { NOTDEFINED, USERDEFINED, ADMINISTRATION, CARPENTRY, CLEANING, CONCRETE, DRYWALL, ELECTRIC, FINISHING, FLOORING, GENERAL, HVAC, LANDSCAPING, MASONRY, PAINTING, PAVING, PLUMBING, ROOFING, SITEGRADING, STEELWORK, SURVEYING };
	public enum IfcLampTypeEnum { NOTDEFINED, USERDEFINED, COMPACTFLUORESCENT, FLUORESCENT, HIGHPRESSUREMERCURY, HIGHPRESSURESODIUM, METALHALIDE, TUNGSTENFILAMENT, HALOGEN, LED, OLED };
	public enum IfcLayerSetDirectionEnum { AXIS1, AXIS2, AXIS3 };
	public enum IfcLightDistributionCurveEnum { NOTDEFINED, TYPE_A, TYPE_B, TYPE_C };
	public enum IfcLightEmissionSourceEnum { NOTDEFINED, COMPACTFLUORESCENT, FLUORESCENT, HIGHPRESSUREMERCURY, HIGHPRESSURESODIUM, LIGHTEMITTINGDIODE, LOWPRESSURESODIUM, LOWVOLTAGEHALOGEN, MAINVOLTAGEHALOGEN, METALHALIDE, TUNGSTENFILAMENT };
	public enum IfcLightFixtureTypeEnum { NOTDEFINED, USERDEFINED, POINTSOURCE, DIRECTIONSOURCE, SECURITYLIGHTING };
	public enum IfcLiquidTerminalTypeEnum { NOTDEFINED, USERDEFINED, LOADINGARM, HOSEREEL };
	public enum IfcLoadGroupTypeEnum { NOTDEFINED, USERDEFINED, LOAD_GROUP, LOAD_CASE, LOAD_COMBINATION, LOAD_COMBINATION_GROUP }; //IFC4 DELETED 
	public enum IfcLogicalEnum { TRUE, FALSE, UNKNOWN };
	public enum IfcLogicalOperatorEnum { NONE, LOGICALAND, LOGICALOR, LOGICALXOR, LOGICALNOTAND, LOGICALNOTOR };
	public enum IfcMarineFacilityTypeEnum { NOTDEFINED, USERDEFINED, CANAL, WATERWAYSHIPLIFT, EMBANKMENT, LAUNCHRECOVERY, MARINEDEFENCE, HYDROLIFT, SHIPYARD, SHIPLIFT, PORT, QUAY, FLOATINGDOCK, NAVIGATIONALCHANNEL, BREAKWATER, DRYDOCK, JETTY, SHIPLOCK, BARRIERBEACH, SLIPWAY, WATERWAY };
	public enum IfcMarinePartTypeEnum { NOTDEFINED, USERDEFINED, CREST, MANUFACTURING, LOWWATERLINE, CORE, WATERFIELD, CILL_LEVEL, BERTHINGSTRUCTURE, COPELEVEL, CHAMBER, STORAGE, APPROACHCHANNEL, VEHICLESERVICING, SHIPTRANSFER, GATEHEAD, GUDINGSTRUCTURE, BELOWWATERLINE, WEATHERSIDE, LANDFIELD, PROTECTION, LEEWARDSIDE, ABOVEWATERLINE, ANCHORAGE, NAVIGATIONALAREA, HIGHWATERLINE };
	public enum IfcMechanicalFastenerTypeEnum { NOTDEFINED, USERDEFINED, ANCHORBOLT, BOLT, DOWEL, NAIL, NAILPLATE, RIVET, SCREW, SHEARCONNECTOR, STAPLE, STUDSHEARCONNECTOR, COUPLER, RAILJOINT, RAILFASTENING, CHAIN, ROPE }
	public enum IfcMedicalDeviceTypeEnum { NOTDEFINED, USERDEFINED, AIRSTATION, FEEDAIRUNIT, OXYGENGENERATOR, OXYGENPLANT, VACUUMSTATION };
	public enum IfcMemberTypeEnum { NOTDEFINED, USERDEFINED, BRACE, CHORD, COLLAR, MEMBER, MULLION, PLATE, POST, PURLIN, RAFTER, STRINGER, STRUT, STUD, STIFFENING_RIB, ARCH_SEGMENT, SUSPENSION_CABLE, SUSPENDER, STAY_CABLE, STRUCTURALCABLE, TIEBAR };
	public enum IfcMobileTelecommunicationsApplianceTypeEnum { NOTDEFINED, USERDEFINED, E_UTRAN_NODE_B, REMOTE_RADIO_UNIT, ACCESSPOINT, BASETRANSCEIVERSTATION, REMOTEUNIT, BASEBANDUNIT, MASTERUNIT };
	public enum IfcMooringDeviceTypeEnum { NOTDEFINED, USERDEFINED, LINETENSIONER, MAGNETICDEVICE, MOORINGHOOKS, VACUUMDEVICE, BOLLARD };
	public enum IfcMotorConnectionTypeEnum { NOTDEFINED, USERDEFINED, BELTDRIVE, COUPLING, DIRECTDRIVE };
	public enum IfcNavigationElementTypeEnum { NOTDEFINED, USERDEFINED, BEACON, BUOY };
	[Obsolete("DEPRECATED IFC4", false)]
	public enum IfcNullStyle { NULL }; 
	public enum IfcObjectiveEnum { NOTDEFINED, USERDEFINED, CODECOMPLIANCE, CODEWAIVER, DESIGNINTENT, EXTERNAL, HEALTHANDSAFETY, MERGECONFLICT, MODELVIEW, PARAMETER, REQUIREMENT, SPECIFICATION, TRIGGERCONDITION };
	public enum IfcObjectTypeEnum { NOTDEFINED, PRODUCT, PROCESS, CONTROL, RESOURCE, ACTOR, GROUP, PROJECT };
	public enum IfcOccupantTypeEnum { NOTDEFINED, USERDEFINED, ASSIGNEE, ASSIGNOR, LESSEE, LESSOR, LETTINGAGENT, OWNER, TENANT };
	public enum IfcOpeningElementTypeEnum { NOTDEFINED, USERDEFINED, OPENING, RECESS }
	public enum IfcOutletTypeEnum { NOTDEFINED, USERDEFINED, AUDIOVISUALOUTLET, COMMUNICATIONSOUTLET, POWEROUTLET, DATAOUTLET, TELEPHONEOUTLET };
	public enum IfcPerformanceHistoryTypeEnum { NOTDEFINED, USERDEFINED };
	public enum IfcPermeableCoveringOperationEnum { NOTDEFINED, USERDEFINED, GRILL, LOUVER, SCREEN };
	public enum IfcPermitTypeEnum { NOTDEFINED, USERDEFINED, ACCESS, BUILDING, WORK };
	public enum IfcPhysicalOrVirtualEnum { NOTDEFINED, PHYSICAL, VIRTUAL };
	public enum IfcPileConstructionEnum { NOTDEFINED, USERDEFINED, BORED, CAST_IN_PLACE, COMPOSITE, DRIVEN, JETGROUTING, PRECAST_CONCRETE, PREFAB_STEEL };
	public enum IfcPileTypeEnum { NOTDEFINED, USERDEFINED, COHESION, FRICTION, SUPPORT, BORED, DRIVEN, JETGROUTING };
	public enum IfcPipeFittingTypeEnum { NOTDEFINED, USERDEFINED, BEND, CONNECTOR, ENTRY, EXIT, JUNCTION, OBSTRUCTION, TRANSITION };
	public enum IfcPipeSegmentTypeEnum { NOTDEFINED, USERDEFINED, FLEXIBLESEGMENT, RIGIDSEGMENT, GUTTER, SPOOL, CULVERT };
	public enum IfcPlateTypeEnum { NOTDEFINED, USERDEFINED, CURTAIN_PANEL, SHEET, FLANGE_PLATE, WEB_PLATE, STIFFENER_PLATE, GUSSET_PLATE, COVER_PLATE, SPLICE_PLATE, BASE_PLATE };
	public enum IfcPreferredSurfaceCurveRepresentation { CURVE3D, PCURVE_S1, PCURVE_S2 };
	public enum IfcProcedureTypeEnum { NOTDEFINED, USERDEFINED, ADVICE_CAUTION, ADVICE_NOTE, ADVICE_WARNING, CALIBRATION, DIAGNOSTIC, SHUTDOWN, STARTUP };
	public enum IfcProfileTypeEnum { CURVE, AREA };
	public enum IfcProjectedOrTrueLengthEnum { PROJECTED_LENGTH, TRUE_LENGTH };
	public enum IfcProjectOrderRecordTypeEnum { NOTDEFINED, USERDEFINED, CHANGE, MAINTENANCE, MOVE, PURCHASE, WORK };
	public enum IfcProjectOrderTypeEnum { NOTDEFINED, USERDEFINED, CHANGEORDER, MAINTENANCEWORKORDER, MOVEORDER, PURCHASEORDER, WORKORDER };
	public enum IfcProjectionElementTypeEnum { NOTDEFINED, USERDEFINED, BLISTER, DEVIATOR }
	public enum IfcPropertySetTemplateTypeEnum { NOTDEFINED, PSET_TYPEDRIVENONLY, PSET_TYPEDRIVENOVERRIDE, PSET_OCCURRENCEDRIVEN, PSET_PERFORMANCEDRIVEN, QTO_TYPEDRIVENONLY, QTO_TYPEDRIVENOVERRIDE, QTO_OCCURRENCEDRIVEN };
	public enum IfcPropertySourceEnum { NOTDEFINED, USERDEFINED, DESIGN, DESIGNMAXIMUM, DESIGNMINIMUM, SIMULATED, ASBUILT, COMMISSIONING, MEASURED };
	public enum IfcProtectiveDeviceTrippingUnitTypeEnum { NOTDEFINED, USERDEFINED, ELECTRONIC, ELECTROMAGNETIC, RESIDUALCURRENT, THERMAL };
	public enum IfcProtectiveDeviceTypeEnum { NOTDEFINED, USERDEFINED, FUSEDISCONNECTOR, CIRCUITBREAKER, EARTHFAILUREDEVICE, RESIDUALCURRENTCIRCUITBREAKER, RESIDUALCURRENTSWITCH, VARISTOR, EARTHLEAKAGECIRCUITBREAKER, EARTHINGSWITCH, ANTI_ARCING_DEVICE, SPARKGAP, VOLTAGELIMITER };
	public enum IfcPumpTypeEnum { NOTDEFINED, USERDEFINED, CIRCULATOR, ENDSUCTION, SPLITCASE, VERTICALINLINE, VERTICALTURBINE, SUBMERSIBLEPUMP, SUMPPUMP };
	public enum IfcRailTypeEnum { NOTDEFINED, USERDEFINED, RACKRAIL, BLADE, GUARDRAIL, STOCKRAIL, CHECKRAIL, RAIL };
	public enum IfcRailwayTypeEnum { NOTDEFINED, USERDEFINED };
	public enum IfcRailwayPartTypeEnum { NOTDEFINED, USERDEFINED, TRACKSTRUCTURE, TRACKSTRUCTUREPART, LINESIDESTRUCTUREPART, DILATATIONSUPERSTRUCTURE, PLAINTRACKSUPESTRUCTURE, LINESIDESTRUCTURE, SUPERSTRUCTURE, TURNOUTSUPERSTRUCTURE };
	public enum IfcRailingTypeEnum { NOTDEFINED, USERDEFINED, HANDRAIL, GUARDRAIL, BALUSTRADE, FENCE };
	public enum IfcRampFlightTypeEnum { NOTDEFINED, USERDEFINED, STRAIGHT, SPIRAL };
	public enum IfcRampTypeEnum { NOTDEFINED, USERDEFINED, STRAIGHT_RUN_RAMP, TWO_STRAIGHT_RUN_RAMP, QUARTER_TURN_RAMP, TWO_QUARTER_TURN_RAMP, HALF_TURN_RAMP, SPIRAL_RAMP };
	public enum IfcRecurrenceTypeEnum { DAILY, WEEKLY, MONTHLY_BY_DAY_OF_MONTH, MONTHLY_BY_POSITION, BY_DAY_COUNT, BY_WEEKDAY_COUNT, YEARLY_BY_DAY_OF_MONTH, YEARLY_BY_POSITION };
	public enum IfcReferentTypeEnum { NOTDEFINED, USERDEFINED, KILOPOINT, MILEPOINT, STATION, REFERENCEMARKER };
	public enum IfcReflectanceMethodEnum { NOTDEFINED, BLINN, FLAT, GLASS, MATT, METAL, MIRROR, PHONG, PLASTIC, STRAUSS };
	public enum IfcReinforcedSoilTypeEnum { NOTDEFINED, USERDEFINED, SURCHARGEPRELOADED, VERTICALLYDRAINED, DYNAMICALLYCOMPACTED, REPLACED, ROLLERCOMPACTED, GROUTED };
	public enum IfcReinforcingBarSurfaceEnum { NOTDEFINED, PLAIN, TEXTURED };
	public enum IfcReinforcingBarRoleEnum { NOTDEFINED, USERDEFINED, MAIN, SHEAR, LIGATURE, STUD, PUNCHING, EDGE, RING, ANCHORING };
	public enum IfcReinforcingBarTypeEnum { NOTDEFINED, USERDEFINED, MAIN, SHEAR, LIGATURE, STUD, PUNCHING, EDGE, RING, ANCHORING, SPACEBAR };
	public enum IfcReinforcingMeshTypeEnum { NOTDEFINED, USERDEFINED };
	public enum IfcResourceConsumptionEnum { NOTDEFINED, USERDEFINED, CONSUMED, PARTIALLYCONSUMED, NOTCONSUMED, OCCUPIED, PARTIALLYOCCUPIED, NOTOCCUPIED };
	public enum IfcRibPlateDirectionEnum { DIRECTION_X, DIRECTION_Y };
	public enum IfcRoadPartTypeEnum { NOTDEFINED, USERDEFINED, ROADSIDEPART, BUS_STOP, HARDSHOULDER, INTERSECTION, PASSINGBAY, ROADWAYPLATEAU, ROADSIDE, REFUGEISLAND, TOLLPLAZA, CENTRALRESERVE, SIDEWALK, PARKINGBAY, RAILWAYCROSSING, PEDESTRIAN_CROSSING, SOFTSHOULDER, BICYCLECROSSING, CENTRALISLAND, SHOULDER, TRAFFICLANE, ROADSEGMENT, ROUNDABOUT, LAYBY, CARRIAGEWAY, TRAFFICISLAND };
	public enum IfcRoadTypeEnum { NOTDEFINED, USERDEFINED };
	public enum IfcRoleEnum { NOTDEFINED, USERDEFINED, SUPPLIER, MANUFACTURER, CONTRACTOR, SUBCONTRACTOR, ARCHITECT, STRUCTURALENGINEER, COSTENGINEER, CLIENT, BUILDINGOWNER, BUILDINGOPERATOR, MECHANICALENGINEER, ELECTRICALENGINEER, PROJECTMANAGER, FACILITIESMANAGER, CIVILENGINEER, COMMISSIONINGENGINEER, ENGINEER, OWNER, CONSULTANT, CONSTRUCTIONMANAGER, FIELDCONSTRUCTIONMANAGER, RESELLER };
	public enum IfcRoofTypeEnum { NOTDEFINED, USERDEFINED, FLAT_ROOF, SHED_ROOF, GABLE_ROOF, HIP_ROOF, HIPPED_GABLE_ROOF, GAMBREL_ROOF, MANSARD_ROOF, BARREL_ROOF, RAINBOW_ROOF, BUTTERFLY_ROOF, PAVILION_ROOF, DOME_ROOF, FREEFORM };
	public enum IfcSanitaryTerminalTypeEnum { NOTDEFINED, USERDEFINED, BATH, BIDET, CISTERN, SHOWER, SINK, SANITARYFOUNTAIN, TOILETPAN, URINAL, WASHHANDBASIN, WCSEAT };
	public enum IfcSectionTypeEnum { UNIFORM, TAPERED };
	public enum IfcSensorTypeEnum { NOTDEFINED, USERDEFINED, COSENSOR, CO2SENSOR, FIRESENSOR, FLOWSENSOR, GASSENSOR, HEATSENSOR, HUMIDITYSENSOR, LIGHTSENSOR, MOISTURESENSOR, MOVEMENTSENSOR, PRESSURESENSOR, SMOKESENSOR, SOUNDSENSOR, TEMPERATURESENSOR, CONDUCTANCESENSOR, CONTACTSENSOR, FROSTSENSOR, IDENTIFIERSENSOR, IONCONCENTRATIONSENSOR, LEVELSENSOR, PHSENSOR, RADIATIONSENSOR, RADIOACTIVITYSENSOR, WINDSENSOR, EARTHQUAKESENSOR, FOREIGNOBJECTDETECTIONSENSOR, OBSTACLESENSOR, RAINSENSOR, SNOWDEPTHSENSOR, TRAINSENSOR, TURNOUTCLOSURESENSOR, WHEELSENSOR };
	public enum IfcSequenceEnum { NOTDEFINED, USERDEFINED, START_START, START_FINISH, FINISH_START, FINISH_FINISH };
	public enum IfcServiceLifeTypeEnum { ACTUALSERVICELIFE, EXPECTEDSERVICELIFE, OPTIMISTICREFERENCESERVICELIFE, PESSIMISTICREFERENCESERVICELIFE, REFERENCESERVICELIFE };
	public enum IfcServiceLifeFactorTypeEnum { NOTDEFINED, USERDEFINED, A_QUALITYOFCOMPONENTS, B_DESIGNLEVEL, C_WORKEXECUTIONLEVEL, D_INDOORENVIRONMENT, E_OUTDOORENVIRONMENT, F_INUSECONDITIONS, G_MAINTENANCELEVEL };
	public enum IfcShadingDeviceTypeEnum { NOTDEFINED, USERDEFINED, JALOUSIE, SHUTTER, AWNING };
	public enum IfcSignalTypeEnum { NOTDEFINED, USERDEFINED, VISUAL, AUDIO, MIXED };
	public enum IfcSignTypeEnum { NOTDEFINED, USERDEFINED, MARKER, PICTORAL, MIRROR };
	public enum IfcSimplePropertyTemplateTypeEnum { NOTDEFINED, P_SINGLEVALUE, P_ENUMERATEDVALUE, P_BOUNDEDVALUE, P_LISTVALUE, P_TABLEVALUE, P_REFERENCEVALUE, Q_LENGTH, Q_AREA, Q_VOLUME, Q_COUNT, Q_WEIGHT, Q_TIME };
	public enum IfcSIPrefix { NONE, EXA, PETA, TERA, GIGA, MEGA, KILO, HECTO, DECA, DECI, CENTI, MILLI, MICRO, NANO, PICO, FEMTO, ATTO };
	public enum IfcSIUnitName { AMPERE, BECQUEREL, CANDELA, COULOMB, CUBIC_METRE, DEGREE_CELSIUS, FARAD, GRAM, GRAY, HENRY, HERTZ, JOULE, KELVIN, LUMEN, LUX, METRE, MOLE, NEWTON, OHM, PASCAL, RADIAN, SECOND, SIEMENS, SIEVERT, SQUARE_METRE, STERADIAN, TESLA, VOLT, WATT, WEBER };
	public enum IfcSlabTypeEnum { NOTDEFINED, USERDEFINED, FLOOR, ROOF, LANDING, BASESLAB, APPROACH_SLAB, PAVING, WEARING, SIDEWALK, TRACKSLAB };
	public enum IfcSolarDeviceTypeEnum { NOTDEFINED, USERDEFINED, SOLARCOLLECTOR, SOLARPANEL };
	public enum IfcSoundScaleEnum { NOTDEFINED, USERDEFINED, DBA, DBB, DBC, NC, NR };
	public enum IfcSpaceHeaterTypeEnum { NOTDEFINED, USERDEFINED, SECTIONALRADIATOR, PANELRADIATOR, TUBULARRADIATOR, CONVECTOR, BASEBOARDHEATER, FINNEDTUBEUNIT, UNITHEATER, RADIATOR };
	public enum IfcSpaceTypeEnum { NOTDEFINED, USERDEFINED, SPACE, PARKING, GFA, INTERNAL, EXTERNAL };
	public enum IfcSpatialZoneTypeEnum { NOTDEFINED, USERDEFINED, CONSTRUCTION, FIRESAFETY, LIGHTING, OCCUPANCY, SECURITY, THERMAL, VENTILATION, TRANSPORT, RESERVATION };
	public enum IfcStairTypeEnum { NOTDEFINED, USERDEFINED, STRAIGHT_RUN_STAIR, TWO_STRAIGHT_RUN_STAIR, QUARTER_WINDING_STAIR, QUARTER_TURN_STAIR, HALF_WINDING_STAIR, HALF_TURN_STAIR, TWO_QUARTER_WINDING_STAIR, TWO_QUARTER_TURN_STAIR, THREE_QUARTER_WINDING_STAIR, THREE_QUARTER_TURN_STAIR, SPIRAL_STAIR, DOUBLE_RETURN_STAIR, CURVED_RUN_STAIR, TWO_CURVED_RUN_STAIR, LADDER };
	public enum IfcStackTerminalTypeEnum { NOTDEFINED, USERDEFINED, BIRDCAGE, COWL, RAINWATERHOPPER };
	public enum IfcStairFlightTypeEnum { NOTDEFINED, USERDEFINED, STRAIGHT, WINDER, SPIRAL, CURVED, FREEFORM };
	public enum IfcStateEnum { NOTDEFINED, READWRITE, READONLY, LOCKED, READWRITELOCKED, READONLYLOCKED };
	public enum IfcStructuralCurveActivityTypeEnum { NOTDEFINED, USERDEFINED, CONST, LINEAR, POLYGONAL, EQUIDISTANT, SINUS, PARABOLA, DISCRETE }
	public enum IfcStructuralCurveMemberTypeEnum { NOTDEFINED, USERDEFINED, RIGID_JOINED_MEMBER, PIN_JOINED_MEMBER, CABLE, TENSION_MEMBER, COMPRESSION_MEMBER };
	public enum IfcStructuralSurfaceActivityTypeEnum { NOTDEFINED, USERDEFINED, CONST, BILINEAR, DISCRETE, ISOCONTOUR }
	public enum IfcStructuralSurfaceMemberTypeEnum { NOTDEFINED, USERDEFINED, BENDING_ELEMENT, MEMBRANE_ELEMENT, SHELL };
	public enum IfcSubContractResourceTypeEnum { NOTDEFINED, USERDEFINED, PURCHASE, WORK };
	public enum IfcSurfaceFeatureTypeEnum { NOTDEFINED, USERDEFINED, MARK, TAG, TREATMENT, DEFECT, HATCHMARKING, LINEMARKING, PAVEMENTSURFACEMARKING, SYMBOLMARKING, NONSKIDSURFACING, RUMBLESTRIP, TRANSVERSERUMBLESTRIP };
	public enum IfcSurfaceSide { POSITIVE, NEGATIVE, BOTH };
	public enum IfcSurfaceTextureEnum { NOTDEFINED, BUMP, OPACITY, REFLECTION, SELFILLUMINATION, SHININESS, SPECULAR, TEXTURE, TRANSPARENCYMAP };
	public enum IfcSwitchingDeviceTypeEnum { NOTDEFINED, USERDEFINED, CONTACTOR, EMERGENCYSTOP, STARTER, SWITCHDISCONNECTOR, TOGGLESWITCH, DIMMERSWITCH, KEYPAD, MOMENTARYSWITCH, SELECTORSWITCH, RELAY, START_AND_STOP_EQUIPMENT };
	public enum IfcSystemFurnitureElementTypeEnum { NOTDEFINED, USERDEFINED, PANEL, WORKSURFACE, SUBRACK };
	public enum IfcTankTypeEnum { NOTDEFINED, USERDEFINED, EXPANSION, PRESSUREVESSEL, PREFORMED, SECTIONAL, BASIN, BREAKPRESSURE, FEEDANDEXPANSION, STORAGE, VESSEL, OILRETENTIONTRAY }; //IFC4 DELETED
	public enum IfcTaskTypeEnum { NOTDEFINED, USERDEFINED, ATTENDANCE, CONSTRUCTION, DEMOLITION, DISMANTLE, DISPOSAL, INSTALLATION, LOGISTIC, MAINTENANCE, MOVE, OPERATION, REMOVAL, RENOVATION }; //IFC4
	public enum IfcTaskDurationEnum { NOTDEFINED, ELAPSEDTIME, WORKTIME };
	public enum IfcTendonTypeEnum { NOTDEFINED, USERDEFINED, STRAND, WIRE, BAR, COATED };
	public enum IfcTendonAnchorTypeEnum { NOTDEFINED, USERDEFINED, COUPLER, FIXED_END, TENSIONING_END };
	public enum IfcTendonConduitTypeEnum { NOTDEFINED, USERDEFINED, DUCT, COUPLER, GROUTING_DUCT, TRUMPET, DIABOLO };
	public enum IfcTextPath { LEFT, RIGHT, UP, DOWN };
	public enum IfcThermalLoadSourceEnum { NOTDEFINED, USERDEFINED, PEOPLE, LIGHTING, EQUIPMENT, VENTILATIONINDOORAIR, VENTILATIONOUTSIDEAIR, RECIRCULATEDAIR, EXHAUSTAIR, AIREXCHANGERATE, DRYBULBTEMPERATURE, RELATIVEHUMIDITY, INFILTRATION };
	public enum IfcThermalLoadTypeEnum { NOTDEFINED, SENSIBLE, LATENT, RADIANT };
	public enum IfcTimeSeriesDataTypeEnum { NOTDEFINED, CONTINUOUS, DISCRETE, DISCRETEBINARY, PIECEWISEBINARY, PIECEWISECONSTANT, PIECEWISECONTINUOUS };
	public enum IfcTimeSeriesScheduleTypeEnum { NOTDEFINED, USERDEFINED, ANNUAL, MONTHLY, WEEKLY, DAILY };
	public enum IfcTrackElementTypeEnum { NOTDEFINED, USERDEFINED, TRACKENDOFALIGNMENT, BLOCKINGDEVICE, VEHICLESTOP, SLEEPER, HALF_SET_OF_BLADES, SPEEDREGULATOR, DERAILER, FROG };
	public enum IfcTransformerTypeEnum { NOTDEFINED, USERDEFINED, CURRENT, FREQUENCY, VOLTAGE, INVERTER, RECTIFIER, CHOPPER, COMBINED };
	public enum IfcTransitionCode { DISCONTINUOUS, CONTINUOUS, CONTSAMEGRADIENT, CONTSAMEGRADIENTSAMECURVATURE };
	public enum IfcTransitionCurveType { BIQUADRATICPARABOLA, BLOSSCURVE, CLOTHOIDCURVE, COSINECURVE, CUBICPARABOLA, SINECURVE };
	public enum IfcTransportElementFixedTypeEnum { NOTDEFINED, USERDEFINED, ELEVATOR, ESCALATOR, MOVINGWALKWAY, CRANEWAY, LIFTINGGEAR, HAULINGGEAR };
	public enum IfcTransportElementNonFixedTypeEnum { NOTDEFINED, USERDEFINED, VEHICLE, VEHICLETRACKED, ROLLINGSTOCK, VEHICLEWHEELED, VEHICLEAIR, CARGO, VEHICLEMARINE };
	public enum IfcTransportElementTypeEnum { NOTDEFINED, USERDEFINED, ELEVATOR, ESCALATOR, MOVINGWALKWAY };
	public enum IfcTrimmingPreference { UNSPECIFIED, CARTESIAN, PARAMETER };
	public enum IfcTubeBundleTypeEnum { NOTDEFINED, USERDEFINED, FINNED };
	public enum IfcUnitaryControlElementTypeEnum { NOTDEFINED, USERDEFINED, ALARMPANEL, CONTROLPANEL, GASDETECTIONPANEL, INDICATORPANEL, MIMICPANEL, HUMIDISTAT, THERMOSTAT, WEATHERSTATION, COMBINED };
	public enum IfcUnitaryEquipmentTypeEnum { NOTDEFINED, USERDEFINED, AIRHANDLER, AIRCONDITIONINGUNIT, SPLITSYSTEM, ROOFTOPUNIT, DEHUMIDIFIER };
	public enum IfcUnitEnum { USERDEFINED, ABSORBEDDOSEUNIT, AMOUNTOFSUBSTANCEUNIT, AREAUNIT, DOSEEQUIVALENTUNIT, ELECTRICCAPACITANCEUNIT, ELECTRICCHARGEUNIT, ELECTRICCONDUCTANCEUNIT, ELECTRICCURRENTUNIT, ELECTRICRESISTANCEUNIT, ELECTRICVOLTAGEUNIT, ENERGYUNIT, FORCEUNIT, FREQUENCYUNIT, ILLUMINANCEUNIT, INDUCTANCEUNIT, LENGTHUNIT, LUMINOUSFLUXUNIT, LUMINOUSINTENSITYUNIT, MAGNETICFLUXDENSITYUNIT, MAGNETICFLUXUNIT, MASSUNIT, PLANEANGLEUNIT, POWERUNIT, PRESSUREUNIT, RADIOACTIVITYUNIT, SOLIDANGLEUNIT, THERMODYNAMICTEMPERATUREUNIT, TIMEUNIT, VOLUMEUNIT };
	public enum IfcValveTypeEnum { NOTDEFINED, USERDEFINED, AIRRELEASE, ANTIVACUUM, CHANGEOVER, CHECK, COMMISSIONING, DIVERTING, DRAWOFFCOCK, DOUBLECHECK, DOUBLEREGULATING, FAUCET, FLUSHING, GASCOCK, GASTAP, ISOLATING, MIXING, PRESSUREREDUCING, PRESSURERELIEF, REGULATING, SAFETYCUTOFF, STEAMTRAP, STOPCOCK };
	public enum IfcVibrationDamperTypeEnum { NOTDEFINED, USERDEFINED, BENDING_YIELD, SHEAR_YIELD, AXIAL_YIELD, FRICTION, VISCOUS, RUBBER };
	public enum IfcVibrationIsolatorTypeEnum { NOTDEFINED, USERDEFINED, COMPRESSION, SPRING, BASE };
	public enum IfcVoidingFeatureTypeEnum { NOTDEFINED, USERDEFINED, CUTOUT, NOTCH, HOLE, MITER, CHAMFER, EDGE };
	public enum IfcWallTypeEnum { NOTDEFINED, USERDEFINED, STANDARD, ELEMENTEDWALL, MOVABLE, PARAPET, PARTITIONING, PLUMBINGWALL, POLYGONAL, SHEAR, SOLIDWALL, RETAININGWALL, WAVEWALL }; //IFC4 change STANDARD, POLYGONAL, ELEMENTEDWALL
	public enum IfcWasteTerminalTypeEnum { NOTDEFINED, USERDEFINED, FLOORTRAP, FLOORWASTE, GULLYSUMP, GULLYTRAP, GREASEINTERCEPTOR, OILINTERCEPTOR, PETROLINTERCEPTOR, ROOFDRAIN, WASTEDISPOSALUNIT, WASTETRAP }; // IFC4  
	public enum IfcWindowPanelOperationEnum { NOTDEFINED, SIDEHUNGRIGHTHAND, SIDEHUNGLEFTHAND, TILTANDTURNRIGHTHAND, TILTANDTURNLEFTHAND, TOPHUNG, BOTTOMHUNG, PIVOTHORIZONTAL, PIVOTVERTICAL, SLIDINGHORIZONTAL, SLIDINGVERTICAL, REMOVABLECASEMENT, FIXEDCASEMENT, OTHEROPERATION };
	public enum IfcWindowPanelPositionEnum { NOTDEFINED, LEFT, MIDDLE, RIGHT, BOTTOM, TOP };
	public enum IfcWindowStyleConstructionEnum { NOTDEFINED, ALUMINIUM, HIGH_GRADE_STEEL, STEEL, WOOD, ALUMINIUM_WOOD, PLASTIC, OTHER_CONSTRUCTION };
	public enum IfcWindowStyleOperationEnum { NOTDEFINED, USERDEFINED, SINGLE_PANEL, DOUBLE_PANEL_VERTICAL, DOUBLE_PANEL_HORIZONTAL, TRIPLE_PANEL_VERTICAL, TRIPLE_PANEL_BOTTOM, TRIPLE_PANEL_TOP, TRIPLE_PANEL_LEFT, TRIPLE_PANEL_RIGHT, TRIPLE_PANEL_HORIZONTAL };
	public enum IfcWindowTypeEnum { NOTDEFINED, USERDEFINED, WINDOW, SKYLIGHT, LIGHTDOME };
	public enum IfcWindowTypePartitioningEnum { NOTDEFINED, USERDEFINED, SINGLE_PANEL, DOUBLE_PANEL_VERTICAL, DOUBLE_PANEL_HORIZONTAL, TRIPLE_PANEL_VERTICAL, TRIPLE_PANEL_BOTTOM, TRIPLE_PANEL_TOP, TRIPLE_PANEL_LEFT, TRIPLE_PANEL_RIGHT, TRIPLE_PANEL_HORIZONTAL };
	public enum IfcWorkCalendarTypeEnum { NOTDEFINED, USERDEFINED, FIRSTSHIFT, SECONDSHIFT, THIRDSHIFT };
	public enum IfcWorkControlTypeEnum { NOTDEFINED, USERDEFINED, ACTUAL, BASELINE, PLANNED };
	public enum IfcWorkPlanTypeEnum { NOTDEFINED, USERDEFINED, ACTUAL, BASELINE, PLANNED };
	public enum IfcWorkScheduleTypeEnum { NOTDEFINED, USERDEFINED, ACTUAL, BASELINE, PLANNED };

	public abstract class SelectEnum
	{
		internal abstract List<Tuple<string, string[]>> getConstants();
	}
	public abstract class SelectEnum<T, U> : SelectEnum where T : struct where U : struct
	{
		private T mFirstEnumeration;
		private U mSecondEnumeration;
		protected int mPosition = 0;
		protected SelectEnum() { }
		protected SelectEnum(T enumeration) { mFirstEnumeration = enumeration; mPosition = 0; }
		protected SelectEnum(U enumeration) { mSecondEnumeration = enumeration; mPosition = 1; }
		public override string ToString()
		{
			if (mPosition == 1)
				return typeof(U).Name.ToUpper() + "(." + mSecondEnumeration.ToString() + ".)";
			return typeof(T).Name.ToUpper() + "(." + mFirstEnumeration.ToString() + ".)";
		}
		protected static int parse(string str, ref T firstEnumeration, ref U secondEnumeration)
		{
			if(str.StartsWith("."))
			{
				string s = str.Substring(1, str.Length - 2);
				if (Enum.TryParse<T>(s, out firstEnumeration))
					return 0;
				Enum.TryParse<U>(s, out secondEnumeration);
				return 1;
			}
			string firstName = typeof(T).Name.ToLower(), secondName = typeof(U).Name.ToLower();
			
			if(str.ToLower().StartsWith(firstName))
			{
				firstEnumeration = ParserIfc.ParseEnum<T>(str, firstName);
				return 0;
			}
			secondEnumeration = ParserIfc.ParseEnum<U>(str, secondName);
			return 1;
		}
		internal bool isEnumeration(ref T enumeration)
		{
			if (mPosition == 0)
			{
				enumeration = mFirstEnumeration;
				return true;
			}
			return false;
		}
		internal bool isEnumeration(ref U enumeration)
		{
			if (mPosition == 1)
			{
				enumeration = mSecondEnumeration;
				return true;
			}
			return false;
		}

		internal virtual string ValueString() { return (mPosition == 1 ? mSecondEnumeration.ToString() : mFirstEnumeration.ToString()); }
		internal override List<Tuple<string, string[]>> getConstants()
		{
			List<Tuple<string, string[]>> result = new List<Tuple<string, string[]>>();
			Type firstType = typeof(T), secondType = typeof(U);
			result.Add(new Tuple<string, string[]>(firstType.Name, Enum.GetNames(firstType)));
			result.Add(new Tuple<string, string[]>(secondType.Name, Enum.GetNames(secondType)));
			return result;
		}
	}
	public abstract class SelectEnum<T, U, V> : SelectEnum<T, U> where T : struct where U : struct where V : struct
	{
		private V mThirdEnumeration;
		protected SelectEnum() { }
		protected SelectEnum(T enumeration) : base(enumeration) { }
		protected SelectEnum(U enumeration) : base(enumeration) { }
		protected SelectEnum(V enumeration) { mThirdEnumeration = enumeration; mPosition = 2; }
		public override string ToString()
		{
			if (mPosition == 2)
				return typeof(V).Name.ToUpper() + "(." + mThirdEnumeration.ToString() + ".)";
			return base.ToString();
		}
		protected static int parse(string str, ref T firstEnumeration, ref U secondEnumeration, ref V thirdEnumeration)
		{
			if (str.StartsWith("."))
			{
				string s = str.Substring(1, str.Length - 2);
				if (Enum.TryParse<V>(s, out thirdEnumeration))
					return 2;
				return parse(str, ref firstEnumeration, ref secondEnumeration);
			}
			string thirdName = typeof(V).Name.ToLower();
			if (str.ToLower().StartsWith(thirdName))
			{
				thirdEnumeration = ParserIfc.ParseEnum<V>(str, thirdName);
				return 2;
			}
			return parse(str, ref firstEnumeration, ref secondEnumeration);
		}
		internal bool isEnumeration(ref V enumeration)
		{
			if (mPosition == 2)
			{
				enumeration = mThirdEnumeration;
				return true;
			}
			return false;
		}
		internal override string ValueString() { return mPosition == 2 ? mThirdEnumeration.ToString() : base.ValueString(); }
		internal override List<Tuple<string, string[]>> getConstants()
		{
			List<Tuple<string, string[]>> result = base.getConstants();
			Type thirdType = typeof(V);
			result.Add(new Tuple<string, string[]>(thirdType.Name, Enum.GetNames(thirdType)));
			return result;
		}
	}
	public abstract class SelectEnum<T, U, V, W, X> : SelectEnum<T, U, V> where T : struct where U : struct where V : struct where W : struct where X: struct
	{
		private W mFourthEnumeration;
		private X mFifthEnumeration;
		protected SelectEnum(T enumeration) : base(enumeration) { }
		protected SelectEnum(U enumeration) : base(enumeration) { }
		protected SelectEnum(V enumeration) : base(enumeration) { }
		protected SelectEnum(W enumeration) { mFourthEnumeration = enumeration; mPosition = 3; }
		protected SelectEnum(X enumeration) { mFifthEnumeration = enumeration; mPosition = 4; }
		public override string ToString()
		{
			if (mPosition == 3)
				return typeof(W).Name.ToUpper() + "(." + mFourthEnumeration.ToString() + ".)";
			if (mPosition == 4)
				return typeof(X).Name.ToUpper() + "(." + mFifthEnumeration.ToString() + ".)";
			return base.ToString();
		}
		protected static int parse(string str, ref T firstEnumeration, ref U secondEnumeration, ref V thirdEnumeration, ref W fourthEnumeration, ref X fithEnumeration)
		{
			if (str.StartsWith("."))
			{
				string s = str.Substring(1, str.Length - 2);
				if (Enum.TryParse<W>(s, out fourthEnumeration))
					return 3;
				if (Enum.TryParse<X>(s, out fithEnumeration))
					return 4;
				return parse(str, ref firstEnumeration, ref secondEnumeration);
			}
			string fourthName = typeof(W).Name.ToLower(), fithName = typeof(X).Name.ToLower();

			if (str.ToLower().StartsWith(fourthName))
			{
				fourthEnumeration = ParserIfc.ParseEnum<W>(str, fourthName);
				return 3;
			}
			if (str.ToLower().StartsWith(fithName))
			{
				fithEnumeration = ParserIfc.ParseEnum<X>(str, fithName);
				return 4;
			}
			return parse(str, ref firstEnumeration, ref secondEnumeration, ref thirdEnumeration);
		}

		internal bool isEnumeration(ref W enumeration)
		{
			if (mPosition == 3)
			{
				enumeration = mFourthEnumeration;
				return true;
			}
			return false;
		}
		internal bool isEnumeration(ref X enumeration)
		{
			if (mPosition == 4)
			{
				enumeration = mFifthEnumeration;
				return true;
			}
			return false;
		}
		internal override string ValueString()
		{
			if (mPosition == 3)
				return mFourthEnumeration.ToString();
			if (mPosition == 4)
				return mFifthEnumeration.ToString();
			return base.ValueString();
		}
		internal override List<Tuple<string, string[]>> getConstants()
		{
			List<Tuple<string, string[]>> result = base.getConstants();
			Type fourthType = typeof(W), fithType = typeof(X);
			result.Add(new Tuple<string, string[]>(fourthType.Name, Enum.GetNames(fourthType)));
			result.Add(new Tuple<string, string[]>(fithType.Name, Enum.GetNames(fithType)));
			return result;
		}
	}

	public class IfcFacilityPartTypeSelect : SelectEnum<IfcRailwayPartTypeEnum, IfcBridgePartTypeEnum, IfcMarinePartTypeEnum, IfcRoadPartTypeEnum, IfcFacilityPartCommonTypeEnum>
	{
		public IfcFacilityPartTypeSelect() : base(IfcFacilityPartCommonTypeEnum.NOTDEFINED) { }
		public IfcFacilityPartTypeSelect(IfcRailwayPartTypeEnum enumeration) : base(enumeration) { }
		public IfcFacilityPartTypeSelect(IfcBridgePartTypeEnum enumeration) : base(enumeration) { }
		public IfcFacilityPartTypeSelect(IfcMarinePartTypeEnum enumeration) : base(enumeration) { }
		public IfcFacilityPartTypeSelect(IfcRoadPartTypeEnum enumeration) : base(enumeration) { }
		public IfcFacilityPartTypeSelect(IfcFacilityPartCommonTypeEnum enumeration) : base(enumeration) { }
		public static IfcFacilityPartTypeSelect Parse(string str)
		{
			if (string.IsNullOrEmpty(str) || str[0] == '$')
				return null;
			IfcRailwayPartTypeEnum railwayType = IfcRailwayPartTypeEnum.NOTDEFINED;
			IfcBridgePartTypeEnum bridgePartType = IfcBridgePartTypeEnum.NOTDEFINED;
			IfcMarinePartTypeEnum marineType = IfcMarinePartTypeEnum.NOTDEFINED;
			IfcRoadPartTypeEnum roadType = IfcRoadPartTypeEnum.NOTDEFINED;
			IfcFacilityPartCommonTypeEnum facilityType = IfcFacilityPartCommonTypeEnum.NOTDEFINED;

			int enumeration = parse(str, ref railwayType, ref bridgePartType, ref marineType, ref roadType, ref facilityType);
			if (enumeration == 0)
				return new IfcFacilityPartTypeSelect(railwayType);
			if (enumeration == 1)
				return new IfcFacilityPartTypeSelect(bridgePartType);
			if (enumeration == 2)
				return new IfcFacilityPartTypeSelect(marineType);
			if (enumeration == 3)
				return new IfcFacilityPartTypeSelect(roadType);
			if (enumeration == 4)
				return new IfcFacilityPartTypeSelect(facilityType);
			return null;
		}
	}
	public class IfcImpactProtectionDeviceTypeSelect : SelectEnum<IfcImpactProtectionDeviceTypeEnum, IfcVibrationDamperTypeEnum, IfcVibrationIsolatorTypeEnum>
	{
		public IfcImpactProtectionDeviceTypeSelect() : base(IfcImpactProtectionDeviceTypeEnum.NOTDEFINED) { }
		public IfcImpactProtectionDeviceTypeSelect(IfcImpactProtectionDeviceTypeEnum enumeration) : base(enumeration) { }
		public IfcImpactProtectionDeviceTypeSelect(IfcVibrationDamperTypeEnum enumeration) : base(enumeration) { }
		public IfcImpactProtectionDeviceTypeSelect(IfcVibrationIsolatorTypeEnum enumeration) : base(enumeration) { }
		public static IfcImpactProtectionDeviceTypeSelect Parse(string str)
		{
			if(string.IsNullOrEmpty(str) || str[0] == '$')
				return null;
			IfcImpactProtectionDeviceTypeEnum impactProtectionDeviceType = IfcImpactProtectionDeviceTypeEnum.NOTDEFINED;
			IfcVibrationDamperTypeEnum vibrationDamperType = IfcVibrationDamperTypeEnum.NOTDEFINED;
			IfcVibrationIsolatorTypeEnum vibrationIsolatorType = IfcVibrationIsolatorTypeEnum.NOTDEFINED;

			int enumeration = parse(str, ref impactProtectionDeviceType, ref vibrationDamperType, ref vibrationIsolatorType);
			if(enumeration == 0)
				return new IfcImpactProtectionDeviceTypeSelect(impactProtectionDeviceType);
			if (enumeration == 1)
				return new IfcImpactProtectionDeviceTypeSelect(vibrationDamperType);
			if (enumeration == 2)
				return new IfcImpactProtectionDeviceTypeSelect(vibrationIsolatorType);
			return null;
		}
	}
	public class IfcTransportElementTypeSelect : SelectEnum<IfcTransportElementFixedTypeEnum, IfcTransportElementNonFixedTypeEnum>
	{
		public IfcTransportElementTypeSelect() : base(IfcTransportElementFixedTypeEnum.NOTDEFINED) { }
		public IfcTransportElementTypeSelect(IfcTransportElementFixedTypeEnum enumeration) : base(enumeration) { }
		public IfcTransportElementTypeSelect(IfcTransportElementNonFixedTypeEnum enumeration) : base(enumeration) { }
		public static IfcTransportElementTypeSelect Parse(string str)
		{
			if (string.IsNullOrEmpty(str) || str[0] == '$')
				return null;
			IfcTransportElementFixedTypeEnum transportElementFixedTypeEnum = IfcTransportElementFixedTypeEnum.NOTDEFINED;
			IfcTransportElementNonFixedTypeEnum transportElementNonFixedTypeEnum = IfcTransportElementNonFixedTypeEnum.NOTDEFINED;

			int position = parse(str, ref transportElementFixedTypeEnum, ref transportElementNonFixedTypeEnum);
			if (position == 0)
				return new IfcTransportElementTypeSelect(transportElementFixedTypeEnum);
			return new IfcTransportElementTypeSelect(transportElementNonFixedTypeEnum);
		}
	}

	public enum PEnum_AcquisitionMethod { GPS, LASERSCAN_AIRBORNE, LASERSCAN_GROUND, SONAR, THEODOLITE, USERDEFINED, NOTKNOWN, UNSET };
	public enum PEnum_ActionRequestChance { HAS_OCCURRED, HIGH, MODERATE, LOW, UNKNOWN };
	public enum PEnum_ActionRequestImpact { VERY_HIGH, HIGH, MODERATE, LOW, UNKNOWN };
	public enum PEnum_ActionRequestRisk { VERY_HIGH, HIGH, MODERATE, LOW, UNKNOWN };
	public enum PEnum_ActionRequestType { CHANGE, CLAIM, COORDINATION, ENVIRONMENTAL, FUNCTION, INDOORAIRQUALITY, INSTALLATION, RFI, SAFETY, SPECIFICATION };
	public enum PEnum_ActuatorApplication { ENTRYEXITDEVICE, FIRESMOKEDAMPERACTUATOR, DAMPERACTUATOR, VALVEPOSITIONER, LAMPACTUATOR, SUNBLINDACTUATOR, OTHER, NOTKNOWN, UNSET };
	public enum PEnum_AirHandlerConstruction { MANUFACTUREDITEM, CONSTRUCTEDONSITE, OTHER, NOTKNOWN, UNSET };
	public enum PEnum_AirHandlerFanCoilArrangement { BLOWTHROUGH, DRAWTHROUGH, OTHER, NOTKNOWN, UNSET };
	public enum PEnum_AirSideSystemDistributionType { SINGLEDUCT, DUALDUCT, MULTIZONE, OTHER, NOTKNOWN, UNSET };
	public enum PEnum_AirSideSystemType { CONSTANTVOLUME, CONSTANTVOLUMESINGLEZONE, CONSTANTVOLUMEMULTIPLEZONEREHEAT, CONSTANTVOLUMEBYPASS, VARIABLEAIRVOLUME, VARIABLEAIRVOLUMEREHEAT, VARIABLEAIRVOLUMEINDUCTION, VARIABLEAIRVOLUMEFANPOWERED, VARIABLEAIRVOLUMEDUALCONDUIT, VARIABLEAIRVOLUMEVARIABLEDIFFUSERS, VARIABLEAIRVOLUMEVARIABLETEMPERATURE, OTHER, NOTKNOWN, UNSET };
	public enum PEnum_AirTerminalAirflowType { SUPPLYAIR, RETURNAIR, EXHAUSTAIR, OTHER, NOTKNOWN, UNSET };
	public enum PEnum_AirTerminalBoxArrangementType { SINGLEDUCT, DUALDUCT, OTHER, NOTKNOWN, UNSET };
	public enum PEnum_AirTerminalBoxReheatType { ELECTRICALREHEAT, WATERCOILREHEAT, STEAMCOILREHEAT, GASREHEAT, NONE, OTHER, NOTKNOWN, UNSET };
	public enum PEnum_AirTerminalCoreType { SHUTTERBLADE, CURVEDBLADE, REMOVABLE, REVERSIBLE, NONE, OTHER, NOTKNOWN, UNSET };
	public enum PEnum_AirTerminalDischargeDirection { PARALLEL, PERPENDICULAR, ADJUSTABLE, OTHER, NOTKNOWN, UNSET };
	public enum PEnum_AirTerminalFaceType { FOURWAYPATTERN, SINGLEDEFLECTION, DOUBLEDEFLECTION, SIGHTPROOF, EGGCRATE, PERFORATED, LOUVERED, OTHER, NOTKNOWN, UNSET };
	public enum PEnum_AirTerminalFinishType { ANNODIZED, PAINTED, NONE, OTHER, NOTKNOWN, UNSET };
	public enum PEnum_AirTerminalFlowControlType { DAMPER, BELLOWS, NONE, OTHER, NOTKNOWN, UNSET };
	public enum PEnum_AirTerminalFlowPattern { LINEARSINGLE, LINEARDOUBLE, LINEARFOURWAY, RADIAL, SWIRL, DISPLACMENT, COMPACTJET, OTHER, NOTKNOWN, UNSET };
	public enum PEnum_AirTerminalLocation { SIDEWALLHIGH, SIDEWALLLOW, CEILINGPERIMETER, CEILINGINTERIOR, FLOOR, SILL, OTHER, NOTKNOWN, UNSET };
	public enum PEnum_AirTerminalMountingType { SURFACE, FLATFLUSH, LAYIN, OTHER, NOTKNOWN, UNSET };
	public enum PEnum_AirTerminalShape { ROUND, RECTANGULAR, SQUARE, SLOT, OTHER, NOTKNOWN, UNSET };
	public enum PEnum_AssemblyPlace { FACTORY, OFFSITE, SITE, OTHER, NOTKNOWN, UNSET };
	public enum PEnum_AssetAccountingType { FIXED, NONFIXED, OTHER, NOTKNOWN, UNSET };
	public enum PEnum_AssetInsuranceType { PERSONAL, REAL, OTHER, NOTKNOWN, UNSET };
	public enum PEnum_AssetTaxType { CAPITALISED, EXPENSED, OTHER, NOTKNOWN, UNSET };
	public enum PEnum_AssetType { FIXED, MOVEABLE };
	public enum PEnum_AudioVisualAmplifierType { FIXED, VARIABLE, OTHER, NOTKNOWN, UNSET };
	public enum PEnum_AudioVisualCameraType { PHOTO, VIDEO, AUDIOVIDEO, OTHER, NOTKNOWN, UNSET };
	public enum PEnum_AudioVisualDisplayTouchScreen { SINGLETOUCH, MULTITOUCH, NONE, OTHER, NOTKNOWN, UNSET };
	public enum PEnum_AudioVisualDisplayType { CRT, DLP, LCD, LED, PLASMA, OTHER, NOTKNOWN, UNSET };
	public enum PEnum_AudioVisualPlayerType { AUDIO, VIDEO, OTHER, NOTKNOWN, UNSET };
	public enum PEnum_AudioVisualProjectorType { OTHER, NOTKNOWN, UNSET };
	public enum PEnum_AudioVisualReceiverType { AUDIO, AUDIOVIDEO, OTHER, NOTKNOWN, UNSET };
	public enum PEnum_AudioVisualSpeakerMounting { FREESTANDING, CEILING, WALL, OUTDOOR, OTHER, NOTKNOWN, UNSET };
	public enum PEnum_AudioVisualSpeakerType { FULLRANGE, MIDRANGE, WOOFER, TWEETER, COAXIAL, OTHER, NOTKNOWN, UNSET };
	public enum PEnum_AudioVisualTunerType { AUDIO, VIDEO, OTHER, NOTKNOWN, UNSET };
	public enum PEnum_BoilerOperatingMode { FIXED, TWOSTEP, MODULATING, OTHER, NOTKNOWN, UNSET };
	public enum PEnum_ConstructionProductResourceCategory { LABOR, MATERIAL, TOOLS, TRAINING };
	public enum PEnum_ConstructionProductResourceTypeCategory { PART, PARTSET, LUBRICANT, OTHER, SPARE, SPARESET };
	public enum PEnum_ConductorFunctionEnum { PHASE_L1, PHASE_L2, PHASE_L3, NEUTRAL, PROTECTIVEEARTH, PROTECTIVEEARTHNEUTRAL, OTHER, NOTKNOWN, UNSET };
	public enum PEnum_DuctConnectionType { BEADEDSLEEVE, COMPRESSION, CRIMP, DRAWBAND, DRIVESLIP, FLANGED, OUTSIDESLEEVE, SLIPON, SOLDERED, SSLIP, STANDINGSEAM, SWEDGE, WELDED, OTHER, NONE, USERDEFINED, NOTDEFINED }
	public enum PEnum_DistributionPortElectricalType { ACPLUG, DCPLUG, COAXIAL, CRIMP, RJ, RADIO, DIN, DSUB, DVI, EIAJ, HDMI, RCA, SOCKET, TRS, USB, XLR, OTHER, NOTKNOWN, UNSET };
	public enum PEnum_DistributionPortGender { MALE, FEMALE, OTHER, NOTKNOWN, UNSET };
	public enum PEnum_ElectricActuatorType { MOTORDRIVE, MAGNETIC, OTHER, NOTKNOWN, UNSET };
	public enum PEnum_ElementComponentDeliveryType { CAST_IN_PLACE, WELDED_TO_STRUCTURE, LOOSE, ATTACHED_FOR_DELIVERY, PRECAST, NOTDEFINED };
	public enum PEnum_ElementComponentCorrosionTreatment { PAINTED, EPOXYCOATED, GALVANISED, STAINLESS, NONE, NOTDEFINED };
	public enum PEnum_EnergySource { COAL, COAL_PULVERIZED, ELECTRICITY, GAS, OIL, PROPANE, WOOD, WOOD_CHIP, WOOD_PELLET, WOOD_PULVERIZED, OTHER, NOTKNOWN, UNSET };
	public enum PEnum_FailPosition { FAILOPEN, FAILCLOSED, OTHER, NOTKNOWN, UNSET };
	public enum PEnum_HeatTransferType { SENSIBLE, LATENT, OTHER, NOTKNOWN, UNSET };
	public enum PEnum_LifeCyclePhase { ACQUISITION, CRADLETOSITE, DECONSTRUCTION, DISPOSAL, DISPOSALTRANSPORT, GROWTH, INSTALLATION, MAINTENANCE, MANUFACTURE, OCCUPANCY, OPERATION, PROCUREMENT, PRODUCTION, PRODUCTIONTRANSPORT, RECOVERY, REFURBISHMENT, REPAIR, REPLACEMENT, TRANSPORT, USAGE, WASTE, WHOLELIFECYCLE, USERDEFINED, NOTDEFINED };
	public enum PEnum_LightFixtureMountingType { CABLESPANNED, FREESTANDING, POLE_SIDE, POLE_TOP, RECESSED, SURFACE, SUSPENDED, TRACKMOUNTED, OTHER, NOTKNOWN, UNSET };
	public enum PEnum_LightFixturePlacingType { CEILING, FLOOR, FURNITURE, POLE, WALL, OTHER, NOTKNOWN, UNSET };
	public enum PEnum_PipeEndStyleTreatment { BRAZED, COMPRESSION, GROOVED, OUTSIDESLEEVE, SOLDERED, SWEDGE, THREADED, WELDED, OTHER, NONE, USERDEFINED, NOTDEFINED }
	public enum PEnum_PipeFittingJunctionType { TEE, CROSS, OTHER, NOTKNOWN, UNSET };
	public enum PEnum_PropertyAgreementType { ASSIGNMENT, LEASE, TENANT, OTHER, NOTKNOWN, UNSET };
	public enum PEnum_PumpBaseType { FRAME, BASE, NONE, OTHER, NOTKNOWN, UNSET };
	public enum PEnum_PumpDriveConnectionType { DIRECTDRIVE, BELTDRIVE, COUPLING, OTHER, NOTKNOWN, UNSET };
	public enum PEnum_ReinforcementBarAllocationType { SINGLE, DOUBLE, ALTERNATE, OTHER, USERDEFINED, NOTDEFINED };
	public enum PEnum_ReinforcementBarType { RING, SPIRAL, OTHER, USERDEFINED, NOTDEFINED };
	public enum PEnum_SpaceHeaterConvectorType { FORCED, NATURAL, OTHER, NOTKNOWN, UNSET };
	public enum PEnum_SpaceHeaterPlacementType { BASEBOARD, TOWELWARMER, SUSPENDED, WALL, OTHER, NOTKNOWN, UNSET };
	public enum PEnum_SpaceHeaterRadiatorType { FINNEDTUBE, PANEL, SECTIONAL, TUBULAR, OTHER, NOTKNOWN, UNSET };
	public enum PEnum_SpaceHeaterTemperatureClassification { LOWTEMPERATURE, HIGHTEMPERATURE, OTHER, NOTKNOWN, UNSET };
	public enum PEnum_SpaceHeaterHeatTransferDimension { POINT, PATH, SURFACE, OTHER, NOTKNOWN, UNSET };
	public enum PEnum_SpaceHeaterHeatTransferMedium { WATER, STEAM, OTHER, NOTKNOWN, UNSET };
	public enum PEnum_Status { NEW, EXISTING, DEMOLISH, TEMPORARY, OTHER, NOTKNOWN, UNSET };
	public enum PEnum_StrataAssemblyPurpose { NOTKNOWN, NOTDEFINED, USERDEFINED, SITE_INVESTIGATION, HYDROCARBON, FEEDSTOCK, MINERAL, GEOLOGICAL, HYDROGEOLOGICAL, DEPOSIT, STORAGE, ENVIRONMENTAL, PEDOLOGICAL, GEOTHERMAL };
	public enum PEnum_TaskCategory { ADJUSTMENT, CALIBRATION, EMERGENCY, INSPECTION, OPERATION, PM, SAFETY, SHUTDOWN, STARTUP, TESTING, TROUBLE };
	public enum PEnum_TaskStatus { NOT_YET_STARTED, STARTED, COMPLETED };
	public enum PEnum_UncertaintyBasis { NOTKNOWN, NOTDEFINED, USERDEFINED, MEASUREMENT, OBSERVATION, ASSESSMENT, INTERPRITATION, ESTIMATE };
	public enum PEnum_ValveMechanism { BALL, BUTTERFLY, CONFIGUREDGATE, GLAND, GLOBE, LUBRICATEDPLUG, NEEDLE, PARALLELSLIDE, PLUG, WEDGEGATE, OTHER, NOTKNOWN, UNSET };
	public enum PEnum_ValveOperation { DROPWEIGHT, FLOAT, HYDRAULIC, LEVER, LOCKSHIELD, MOTORIZED, PNEUMATIC, SOLENOID, SPRING, THERMOSTATIC, WHEEL, OTHER, NOTKNOWN, UNSET };
	public enum PEnum_ValvePattern { SINGLEPORT, ANGLED_2_PORT, STRAIGHT_2_PORT, STRAIGHT_3_PORT, CROSSOVER_4_PORT, OTHER, NOTKNOWN, UNSET };
}
